name: Build and Deploy

on:
  push:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/ticketgenieio/${{ github.event.repository.name }}
          tags: |
            type=sha
            type=raw,enable=${{ github.ref == format('refs/heads/{0}', 'main') }},value=latest
            type=raw,value=${{ github.ref_name }}-latest
            type=raw,value=${{ github.ref_name }}-{{sha}}
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set MAIN urls
        if: github.ref == 'refs/heads/main'
        run: |
          echo "IDP_BASE_URL=https://api.ticketgenie.io/v1/idp" >> $GITHUB_ENV
          echo "LICENSES_BASE_URL=https://api.ticketgenie.io/v1/license" >> $GITHUB_ENV

      - name: Set DEV urls
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "IDP_BASE_URL=https://api.dev.ticketgenie.io/v1/idp" >> $GITHUB_ENV
          echo "LICENSES_BASE_URL=https://api.dev.ticketgenie.io/v1/license" >> $GITHUB_ENV

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          build-args: |
            GITHUB_TOKEN=${{ secrets.GO_GITHUB_TOKEN }}
            BUF_TOKEN=${{ secrets.BUF_TOKEN }}
            IDP_BASE_URL=${{ env.IDP_BASE_URL }}
            LICENSES_BASE_URL=${{ env.LICENSES_BASE_URL }}
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
